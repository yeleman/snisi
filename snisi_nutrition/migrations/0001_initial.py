# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
        ('snisi_core', '0002_auto_20141031_1400'),
    ]

    operations = [
        migrations.CreateModel(
            name='AggNutritionR',
            fields=[
                ('snisireport_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='snisi_core.SNISIReport')),
                ('nb_source_reports_expected', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_on_time', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_correct', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_complete', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_altered', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_auto_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_altered', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_auto_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('agg_sources', models.ManyToManyField(related_name='aggregated_agg_aggnutritionr_reports', null=True, verbose_name='Aggr. Sources (all)', to='snisi_nutrition.AggNutritionR', blank=True)),
                ('direct_agg_sources', models.ManyToManyField(related_name='direct_aggregated_agg_aggnutritionr_reports', null=True, verbose_name='Aggr. Sources (direct)', to='snisi_nutrition.AggNutritionR', blank=True)),
            ],
            options={
                'verbose_name': 'Aggregated Nutrition Report',
                'verbose_name_plural': 'Aggregated Nutrition Reports',
            },
            bases=('snisi_core.snisireport', models.Model),
        ),
        migrations.CreateModel(
            name='AggNutritionStocksR',
            fields=[
                ('snisireport_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='snisi_core.SNISIReport')),
                ('nb_source_reports_expected', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_on_time', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_correct', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_complete', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_altered', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_auto_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_altered', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_auto_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('plumpy_nut_initial', models.IntegerField(verbose_name='Plumpy Nut Initial')),
                ('plumpy_nut_received', models.IntegerField(verbose_name='Plumpy Nut Received')),
                ('plumpy_nut_used', models.IntegerField(verbose_name='Plumpy Nut Used')),
                ('plumpy_nut_lost', models.IntegerField(verbose_name='Plumpy Nut Lost')),
                ('milk_f75_initial', models.IntegerField(default=0, verbose_name='Milk_F75 Initial')),
                ('milk_f75_received', models.IntegerField(default=0, verbose_name='Milk_F75 Received')),
                ('milk_f75_used', models.IntegerField(default=0, verbose_name='Milk_F75 Used')),
                ('milk_f75_lost', models.IntegerField(default=0, verbose_name='Milk_F75 Lost')),
                ('milk_f100_initial', models.IntegerField(default=0, verbose_name='Milk_F100 Initial')),
                ('milk_f100_received', models.IntegerField(default=0, verbose_name='Milk_F100 Received')),
                ('milk_f100_used', models.IntegerField(default=0, verbose_name='Milk_F100 Used')),
                ('milk_f100_lost', models.IntegerField(default=0, verbose_name='Milk_F100 Lost')),
                ('resomal_initial', models.IntegerField(default=0, verbose_name='Resomal Initial')),
                ('resomal_received', models.IntegerField(default=0, verbose_name='Resomal Received')),
                ('resomal_used', models.IntegerField(default=0, verbose_name='Resomal Used')),
                ('resomal_lost', models.IntegerField(default=0, verbose_name='Resomal Lost')),
                ('plumpy_sup_initial', models.IntegerField(default=0, verbose_name='Plumpy_Sup Initial')),
                ('plumpy_sup_received', models.IntegerField(default=0, verbose_name='Plumpy_Sup Received')),
                ('plumpy_sup_used', models.IntegerField(default=0, verbose_name='Plumpy_Sup Used')),
                ('plumpy_sup_lost', models.IntegerField(default=0, verbose_name='Plumpy_Sup Lost')),
                ('supercereal_initial', models.IntegerField(default=0, verbose_name='Supercereal Initial')),
                ('supercereal_received', models.IntegerField(default=0, verbose_name='Supercereal Received')),
                ('supercereal_used', models.IntegerField(default=0, verbose_name='Supercereal Used')),
                ('supercereal_lost', models.IntegerField(default=0, verbose_name='Supercereal Lost')),
                ('supercereal_plus_initial', models.IntegerField(default=0, verbose_name='Supercereal_Plus Initial')),
                ('supercereal_plus_received', models.IntegerField(default=0, verbose_name='Supercereal_Plus Received')),
                ('supercereal_plus_used', models.IntegerField(default=0, verbose_name='Supercereal_Plus Used')),
                ('supercereal_plus_lost', models.IntegerField(default=0, verbose_name='Supercereal_Plus Lost')),
                ('oil_initial', models.IntegerField(default=0, verbose_name='Oil Initial')),
                ('oil_received', models.IntegerField(default=0, verbose_name='Oil Received')),
                ('oil_used', models.IntegerField(default=0, verbose_name='Oil Used')),
                ('oil_lost', models.IntegerField(default=0, verbose_name='Oil Lost')),
                ('amoxycilline_125_vials_initial', models.IntegerField(default=0, verbose_name='Amoxycilline_125_Vials Initial')),
                ('amoxycilline_125_vials_received', models.IntegerField(default=0, verbose_name='Amoxycilline_125_Vials Received')),
                ('amoxycilline_125_vials_used', models.IntegerField(default=0, verbose_name='Amoxycilline_125_Vials Used')),
                ('amoxycilline_125_vials_lost', models.IntegerField(default=0, verbose_name='Amoxycilline_125_Vials Lost')),
                ('amoxycilline_250_caps_initial', models.IntegerField(default=0, verbose_name='Amoxycilline_250_Caps Initial')),
                ('amoxycilline_250_caps_received', models.IntegerField(default=0, verbose_name='Amoxycilline_250_Caps Received')),
                ('amoxycilline_250_caps_used', models.IntegerField(default=0, verbose_name='Amoxycilline_250_Caps Used')),
                ('amoxycilline_250_caps_lost', models.IntegerField(default=0, verbose_name='Amoxycilline_250_Caps Lost')),
                ('albendazole_400_initial', models.IntegerField(default=0, verbose_name='Albendazole Initial')),
                ('albendazole_400_received', models.IntegerField(default=0, verbose_name='Albendazole Received')),
                ('albendazole_400_used', models.IntegerField(default=0, verbose_name='Albendazole Used')),
                ('albendazole_400_lost', models.IntegerField(default=0, verbose_name='Albendazole Lost')),
                ('vita_100_injectable_initial', models.IntegerField(default=0, verbose_name='Vita_100_Injectable Initial')),
                ('vita_100_injectable_received', models.IntegerField(default=0, verbose_name='Vita_100_Injectable Received')),
                ('vita_100_injectable_used', models.IntegerField(default=0, verbose_name='Vita_100_Injectable Used')),
                ('vita_100_injectable_lost', models.IntegerField(default=0, verbose_name='Vita_100_Injectable Lost')),
                ('vita_200_injectable_initial', models.IntegerField(default=0, verbose_name='Vita_200_Injectable Initial')),
                ('vita_200_injectable_received', models.IntegerField(default=0, verbose_name='Vita_200_Injectable Received')),
                ('vita_200_injectable_used', models.IntegerField(default=0, verbose_name='Vita_200_Injectable Used')),
                ('vita_200_injectable_lost', models.IntegerField(default=0, verbose_name='Vita_200_Injectable Lost')),
                ('iron_folic_acid_initial', models.IntegerField(default=0, verbose_name='Iron_Folic_Acid Initial')),
                ('iron_folic_acid_received', models.IntegerField(default=0, verbose_name='Iron_Folic_Acid Received')),
                ('iron_folic_acid_used', models.IntegerField(default=0, verbose_name='Iron_Folic_Acid Used')),
                ('iron_folic_acid_lost', models.IntegerField(default=0, verbose_name='Iron_Folic_Acid Lost')),
                ('agg_sources', models.ManyToManyField(related_name='aggregated_agg_aggnutritionstocksr_reports', null=True, verbose_name='Aggr. Sources (all)', to='snisi_nutrition.AggNutritionStocksR', blank=True)),
                ('direct_agg_sources', models.ManyToManyField(related_name='direct_aggregated_agg_aggnutritionstocksr_reports', null=True, verbose_name='Aggr. Sources (direct)', to='snisi_nutrition.AggNutritionStocksR', blank=True)),
            ],
            options={
                'verbose_name': 'Aggregated Nutrition Inputs Report',
                'verbose_name_plural': 'Aggregated Nutrition Inputs Reports',
            },
            bases=('snisi_core.snisireport', models.Model),
        ),
        migrations.CreateModel(
            name='AggURENAMNutritionR',
            fields=[
                ('snisireport_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='snisi_core.SNISIReport')),
                ('nb_source_reports_expected', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_on_time', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_correct', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_complete', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_altered', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_auto_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_altered', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_auto_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('u23o6_total_start_m', models.PositiveIntegerField(verbose_name='[6-23m] Start of Month Male')),
                ('u23o6_total_start_f', models.PositiveIntegerField(verbose_name='[6-23m] Start of Month Female')),
                ('u23o6_new_cases', models.PositiveIntegerField(verbose_name='[6-23m] New Cases')),
                ('u23o6_returned', models.PositiveIntegerField(verbose_name='[6-23m] Returned')),
                ('u23o6_total_in_m', models.PositiveIntegerField(verbose_name='[6-23m] Total Admitted Male')),
                ('u23o6_total_in_f', models.PositiveIntegerField(verbose_name='[6-23m] Total Admitted Female')),
                ('u23o6_healed', models.PositiveIntegerField(verbose_name='[6-23m] Healed')),
                ('u23o6_deceased', models.PositiveIntegerField(verbose_name='[6-23m] Deceased')),
                ('u23o6_abandon', models.PositiveIntegerField(verbose_name='[6-23m] Abandon')),
                ('u23o6_total_out_m', models.PositiveIntegerField(verbose_name='[6-23m] Total Out Male')),
                ('u23o6_total_out_f', models.PositiveIntegerField(verbose_name='[6-23m] Total Out Female')),
                ('u23o6_referred', models.PositiveIntegerField(verbose_name='[6-23m] Referred')),
                ('u23o6_total_end_m', models.PositiveIntegerField(verbose_name='[6-23m] End of Month Male')),
                ('u23o6_total_end_f', models.PositiveIntegerField(verbose_name='[6-23m] End of Month Female')),
                ('u59o23_total_start_m', models.PositiveIntegerField(verbose_name='[23-59m] Start of Month Male')),
                ('u59o23_total_start_f', models.PositiveIntegerField(verbose_name='[23-59m] Start of Month Female')),
                ('u59o23_new_cases', models.PositiveIntegerField(verbose_name='[23-59m] New Cases')),
                ('u59o23_returned', models.PositiveIntegerField(verbose_name='[23-59m] Returned')),
                ('u59o23_total_in_m', models.PositiveIntegerField(verbose_name='[23-59m] Total Admitted Male')),
                ('u59o23_total_in_f', models.PositiveIntegerField(verbose_name='[23-59m] Total Admitted Female')),
                ('u59o23_healed', models.PositiveIntegerField(verbose_name='[23-59m] Healed')),
                ('u59o23_deceased', models.PositiveIntegerField(verbose_name='[23-59m] Deceased')),
                ('u59o23_abandon', models.PositiveIntegerField(verbose_name='[23-59m] Abandon')),
                ('u59o23_total_out_m', models.PositiveIntegerField(verbose_name='[23-59m] Total Out Male')),
                ('u59o23_total_out_f', models.PositiveIntegerField(verbose_name='[23-59m] Total Out Female')),
                ('u59o23_referred', models.PositiveIntegerField(verbose_name='[23-59m] Referred')),
                ('u59o23_total_end_m', models.PositiveIntegerField(verbose_name='[23-59m] End of Month Male')),
                ('u59o23_total_end_f', models.PositiveIntegerField(verbose_name='[23-59m] End of Month Female')),
                ('o59_total_start_m', models.PositiveIntegerField(verbose_name='[59m+] Start of Month Male')),
                ('o59_total_start_f', models.PositiveIntegerField(verbose_name='[59m+] Start of Month Female')),
                ('o59_new_cases', models.PositiveIntegerField(verbose_name='[59m+] New Cases')),
                ('o59_returned', models.PositiveIntegerField(verbose_name='[59m+] Returned')),
                ('o59_total_in_m', models.PositiveIntegerField(verbose_name='[59m+] Total Admitted Male')),
                ('o59_total_in_f', models.PositiveIntegerField(verbose_name='[59m+] Total Admitted Female')),
                ('o59_healed', models.PositiveIntegerField(verbose_name='[59m+] Healed')),
                ('o59_deceased', models.PositiveIntegerField(verbose_name='[59m+] Deceased')),
                ('o59_abandon', models.PositiveIntegerField(verbose_name='[59m+] Abandon')),
                ('o59_total_out_m', models.PositiveIntegerField(verbose_name='[59m+] Total Out Male')),
                ('o59_total_out_f', models.PositiveIntegerField(verbose_name='[59m+] Total Out Female')),
                ('o59_referred', models.PositiveIntegerField(verbose_name='[59m+] Referred')),
                ('o59_total_end_m', models.PositiveIntegerField(verbose_name='[59m+] End of Month Male')),
                ('o59_total_end_f', models.PositiveIntegerField(verbose_name='[59m+] End of Month Female')),
                ('pw_total_start_m', models.PositiveIntegerField(verbose_name='[PW/BF] Start of Month Male')),
                ('pw_total_start_f', models.PositiveIntegerField(verbose_name='[PW/BF] Start of Month Female')),
                ('pw_new_cases', models.PositiveIntegerField(verbose_name='[PW/BF] New Cases')),
                ('pw_returned', models.PositiveIntegerField(verbose_name='[PW/BF] Returned')),
                ('pw_total_in_m', models.PositiveIntegerField(verbose_name='[PW/BF] Total Admitted Male')),
                ('pw_total_in_f', models.PositiveIntegerField(verbose_name='[PW/BF] Total Admitted Female')),
                ('pw_healed', models.PositiveIntegerField(verbose_name='[PW/BF] Healed')),
                ('pw_deceased', models.PositiveIntegerField(verbose_name='[PW/BF] Deceased')),
                ('pw_abandon', models.PositiveIntegerField(verbose_name='[PW/BF] Abandon')),
                ('pw_total_out_m', models.PositiveIntegerField(verbose_name='[PW/BF] Total Out Male')),
                ('pw_total_out_f', models.PositiveIntegerField(verbose_name='[PW/BF] Total Out Female')),
                ('pw_referred', models.PositiveIntegerField(verbose_name='[PW/BF] Referred')),
                ('pw_total_end_m', models.PositiveIntegerField(verbose_name='[PW/BF] End of Month Male')),
                ('pw_total_end_f', models.PositiveIntegerField(verbose_name='[PW/BF] End of Month Female')),
                ('exsam_total_start_m', models.PositiveIntegerField(verbose_name='[Ex-SAM] Start of Month Male')),
                ('exsam_total_start_f', models.PositiveIntegerField(verbose_name='[Ex-SAM] Start of Month Female')),
                ('exsam_total_out_m', models.PositiveIntegerField(verbose_name='[Ex-SAM] Total Out Male')),
                ('exsam_total_out_f', models.PositiveIntegerField(verbose_name='[Ex-SAM] Total Out Female')),
                ('exsam_referred', models.PositiveIntegerField(verbose_name='[Ex-SAM] Referred')),
                ('exsam_total_end_m', models.PositiveIntegerField(verbose_name='[Ex-SAM] End of Month Male')),
                ('exsam_total_end_f', models.PositiveIntegerField(verbose_name='[Ex-SAM] End of Month Female')),
                ('agg_sources', models.ManyToManyField(related_name='aggregated_agg_aggurenamnutritionr_reports', null=True, verbose_name='Aggr. Sources (all)', to='snisi_nutrition.AggURENAMNutritionR', blank=True)),
                ('direct_agg_sources', models.ManyToManyField(related_name='direct_aggregated_agg_aggurenamnutritionr_reports', null=True, verbose_name='Aggr. Sources (direct)', to='snisi_nutrition.AggURENAMNutritionR', blank=True)),
            ],
            options={
                'verbose_name': 'Aggregated URENAM Report',
                'verbose_name_plural': 'Aggregated URENAM Reports',
            },
            bases=('snisi_core.snisireport', models.Model),
        ),
        migrations.CreateModel(
            name='AggURENASNutritionR',
            fields=[
                ('snisireport_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='snisi_core.SNISIReport')),
                ('nb_source_reports_expected', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_on_time', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_correct', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_complete', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_altered', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_auto_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_altered', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_auto_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('u59o6_total_start_m', models.PositiveIntegerField(verbose_name='[6-59m] Start of Month Male')),
                ('u59o6_total_start_f', models.PositiveIntegerField(verbose_name='[6-59m] Start of Month Female')),
                ('u59o6_new_cases', models.PositiveIntegerField(verbose_name='[6-59m] New Cases')),
                ('u59o6_returned', models.PositiveIntegerField(verbose_name='[6-59m] Returned')),
                ('u59o6_total_in_m', models.PositiveIntegerField(verbose_name='[6-59m] Total Admitted Male')),
                ('u59o6_total_in_f', models.PositiveIntegerField(verbose_name='[6-59m] Total Admitted Female')),
                ('u59o6_transferred', models.PositiveIntegerField(verbose_name='[6-59m] Transferred from URENI')),
                ('u59o6_healed', models.PositiveIntegerField(verbose_name='[6-59m] Healed')),
                ('u59o6_deceased', models.PositiveIntegerField(verbose_name='[6-59m] Deceased')),
                ('u59o6_abandon', models.PositiveIntegerField(verbose_name='[6-59m] Abandon')),
                ('u59o6_total_out_m', models.PositiveIntegerField(verbose_name='[6-59m] Total Out Male')),
                ('u59o6_total_out_f', models.PositiveIntegerField(verbose_name='[6-59m] Total Out Female')),
                ('u59o6_referred', models.PositiveIntegerField(verbose_name='[6-59m] Referred')),
                ('u59o6_total_end_m', models.PositiveIntegerField(verbose_name='[6-59m] End of Month Male')),
                ('u59o6_total_end_f', models.PositiveIntegerField(verbose_name='[6-59m] End of Month Female')),
                ('o59_total_start_m', models.PositiveIntegerField(verbose_name='[59m+] Start of Month Male')),
                ('o59_total_start_f', models.PositiveIntegerField(verbose_name='[59m+] Start of Month Female')),
                ('o59_new_cases', models.PositiveIntegerField(verbose_name='[59m+] New Cases')),
                ('o59_returned', models.PositiveIntegerField(verbose_name='[59m+] Returned')),
                ('o59_total_in_m', models.PositiveIntegerField(verbose_name='[59m+] Total Admitted Male')),
                ('o59_total_in_f', models.PositiveIntegerField(verbose_name='[59m+] Total Admitted Female')),
                ('o59_transferred', models.PositiveIntegerField(verbose_name='[59m+] Transferred from URENI')),
                ('o59_healed', models.PositiveIntegerField(verbose_name='[59m+] Healed')),
                ('o59_deceased', models.PositiveIntegerField(verbose_name='[59m+] Deceased')),
                ('o59_abandon', models.PositiveIntegerField(verbose_name='[59m+] Abandon')),
                ('o59_total_out_m', models.PositiveIntegerField(verbose_name='[59m+] Total Out Male')),
                ('o59_total_out_f', models.PositiveIntegerField(verbose_name='[59m+] Total Out Female')),
                ('o59_referred', models.PositiveIntegerField(verbose_name='[59m+] Referred')),
                ('o59_total_end_m', models.PositiveIntegerField(verbose_name='[59m+] End of Month Male')),
                ('o59_total_end_f', models.PositiveIntegerField(verbose_name='[59m+] End of Month Female')),
                ('agg_sources', models.ManyToManyField(related_name='aggregated_agg_aggurenasnutritionr_reports', null=True, verbose_name='Aggr. Sources (all)', to='snisi_nutrition.AggURENASNutritionR', blank=True)),
                ('direct_agg_sources', models.ManyToManyField(related_name='direct_aggregated_agg_aggurenasnutritionr_reports', null=True, verbose_name='Aggr. Sources (direct)', to='snisi_nutrition.AggURENASNutritionR', blank=True)),
            ],
            options={
                'verbose_name': 'Aggregated URENAS Report',
                'verbose_name_plural': 'Aggregated URENAS Reports',
            },
            bases=('snisi_core.snisireport', models.Model),
        ),
        migrations.CreateModel(
            name='AggURENINutritionR',
            fields=[
                ('snisireport_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='snisi_core.SNISIReport')),
                ('nb_source_reports_expected', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_on_time', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_correct', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_complete', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_altered', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_auto_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_altered', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_auto_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('u6_total_start_m', models.PositiveIntegerField(verbose_name='[0-6m] Start of Month Male')),
                ('u6_total_start_f', models.PositiveIntegerField(verbose_name='[0-6m] Start of Month Female')),
                ('u6_new_cases', models.PositiveIntegerField(verbose_name='[0-6m] New Cases')),
                ('u6_returned', models.PositiveIntegerField(verbose_name='[0-6m] Returned')),
                ('u6_total_in_m', models.PositiveIntegerField(verbose_name='[0-6m] Total Admitted Male')),
                ('u6_total_in_f', models.PositiveIntegerField(verbose_name='[0-6m] Total Admitted Female')),
                ('u6_referred', models.PositiveIntegerField(verbose_name='[0-6m] Referred')),
                ('u6_healed', models.PositiveIntegerField(verbose_name='[0-6m] Healed')),
                ('u6_deceased', models.PositiveIntegerField(verbose_name='[0-6m] Deceased')),
                ('u6_abandon', models.PositiveIntegerField(verbose_name='[0-6m] Abandon')),
                ('u6_not_responding', models.PositiveIntegerField(verbose_name='[0-6m] Not Respondant')),
                ('u6_total_out_m', models.PositiveIntegerField(verbose_name='[0-6m] Total Out Male')),
                ('u6_total_out_f', models.PositiveIntegerField(verbose_name='[0-6m] Total Out Female')),
                ('u6_transferred', models.PositiveIntegerField(verbose_name='[0-6m] Transferred')),
                ('u6_total_end_m', models.PositiveIntegerField(verbose_name='[0-6m] End of Month Male')),
                ('u6_total_end_f', models.PositiveIntegerField(verbose_name='[0-6m] End of Month Female')),
                ('u59o6_total_start_m', models.PositiveIntegerField(verbose_name='[6-59m] Start of Month Male')),
                ('u59o6_total_start_f', models.PositiveIntegerField(verbose_name='[6-59m] Start of Month Female')),
                ('u59o6_new_cases', models.PositiveIntegerField(verbose_name='[6-59m] New Cases')),
                ('u59o6_returned', models.PositiveIntegerField(verbose_name='[6-59m] Returned')),
                ('u59o6_total_in_m', models.PositiveIntegerField(verbose_name='[6-59m] Total Admitted Male')),
                ('u59o6_total_in_f', models.PositiveIntegerField(verbose_name='[6-59m] Total Admitted Female')),
                ('u59o6_referred', models.PositiveIntegerField(verbose_name='[6-59m] Referred')),
                ('u59o6_healed', models.PositiveIntegerField(verbose_name='[6-59m] Healed')),
                ('u59o6_deceased', models.PositiveIntegerField(verbose_name='[6-59m] Deceased')),
                ('u59o6_abandon', models.PositiveIntegerField(verbose_name='[6-59m] Abandon')),
                ('u59o6_not_responding', models.PositiveIntegerField(verbose_name='[6-59m] Not Respondant')),
                ('u59o6_total_out_m', models.PositiveIntegerField(verbose_name='[6-59m] Total Out Male')),
                ('u59o6_total_out_f', models.PositiveIntegerField(verbose_name='[6-59m] Total Out Female')),
                ('u59o6_transferred', models.PositiveIntegerField(verbose_name='[6-59m] Transferred')),
                ('u59o6_total_end_m', models.PositiveIntegerField(verbose_name='[6-59m] End of Month Male')),
                ('u59o6_total_end_f', models.PositiveIntegerField(verbose_name='[6-59m] End of Month Female')),
                ('o59_total_start_m', models.PositiveIntegerField(verbose_name='[59m+] Start of Month Male')),
                ('o59_total_start_f', models.PositiveIntegerField(verbose_name='[59m+] Start of Month Female')),
                ('o59_new_cases', models.PositiveIntegerField(verbose_name='[59m+] New Cases')),
                ('o59_returned', models.PositiveIntegerField(verbose_name='[59m+] Returned')),
                ('o59_total_in_m', models.PositiveIntegerField(verbose_name='[59m+] Total Admitted Male')),
                ('o59_total_in_f', models.PositiveIntegerField(verbose_name='[59m+] Total Admitted Female')),
                ('o59_referred', models.PositiveIntegerField(verbose_name='[59m+] Referred')),
                ('o59_healed', models.PositiveIntegerField(verbose_name='[59m+] Healed')),
                ('o59_deceased', models.PositiveIntegerField(verbose_name='[59m+] Deceased')),
                ('o59_abandon', models.PositiveIntegerField(verbose_name='[59m+] Abandon')),
                ('o59_not_responding', models.PositiveIntegerField(verbose_name='[59m+] Not Respondant')),
                ('o59_total_out_m', models.PositiveIntegerField(verbose_name='[59m+] Total Out Male')),
                ('o59_total_out_f', models.PositiveIntegerField(verbose_name='[59m+] Total Out Female')),
                ('o59_transferred', models.PositiveIntegerField(verbose_name='[59m+] Transferred')),
                ('o59_total_end_m', models.PositiveIntegerField(verbose_name='[59m+] End of Month Male')),
                ('o59_total_end_f', models.PositiveIntegerField(verbose_name='[59m+] End of Month Female')),
                ('agg_sources', models.ManyToManyField(related_name='aggregated_agg_aggureninutritionr_reports', null=True, verbose_name='Aggr. Sources (all)', to='snisi_nutrition.AggURENINutritionR', blank=True)),
                ('direct_agg_sources', models.ManyToManyField(related_name='direct_aggregated_agg_aggureninutritionr_reports', null=True, verbose_name='Aggr. Sources (direct)', to='snisi_nutrition.AggURENINutritionR', blank=True)),
            ],
            options={
                'verbose_name': 'Aggregated URENI Report',
                'verbose_name_plural': 'Aggregated URENI Reports',
            },
            bases=('snisi_core.snisireport', models.Model),
        ),
        migrations.CreateModel(
            name='AggWeeklyNutritionR',
            fields=[
                ('snisireport_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='snisi_core.SNISIReport')),
                ('nb_source_reports_expected', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_on_time', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_correct', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_complete', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_altered', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_auto_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_altered', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_auto_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('agg_sources', models.ManyToManyField(related_name='aggregated_agg_aggweeklynutritionr_reports', null=True, verbose_name='Aggr. Sources (all)', to='snisi_nutrition.AggWeeklyNutritionR', blank=True)),
                ('direct_agg_sources', models.ManyToManyField(related_name='direct_aggregated_agg_aggweeklynutritionr_reports', null=True, verbose_name='Aggr. Sources (direct)', to='snisi_nutrition.AggWeeklyNutritionR', blank=True)),
            ],
            options={
                'verbose_name': 'Aggregated Weekly Nutrition Report',
                'verbose_name_plural': 'Aggregated Weekly Nutrition Reports',
            },
            bases=('snisi_core.snisireport', models.Model),
        ),
        migrations.CreateModel(
            name='NutritionR',
            fields=[
                ('snisireport_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='snisi_core.SNISIReport')),
            ],
            options={
                'verbose_name': 'Nutrition Report',
                'verbose_name_plural': 'Nutrition Reports',
            },
            bases=('snisi_core.snisireport',),
        ),
        migrations.CreateModel(
            name='NutritionStocksR',
            fields=[
                ('snisireport_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='snisi_core.SNISIReport')),
                ('plumpy_nut_initial', models.IntegerField(verbose_name='Plumpy Nut Initial')),
                ('plumpy_nut_received', models.IntegerField(verbose_name='Plumpy Nut Received')),
                ('plumpy_nut_used', models.IntegerField(verbose_name='Plumpy Nut Used')),
                ('plumpy_nut_lost', models.IntegerField(verbose_name='Plumpy Nut Lost')),
                ('milk_f75_initial', models.IntegerField(default=0, verbose_name='Milk_F75 Initial')),
                ('milk_f75_received', models.IntegerField(default=0, verbose_name='Milk_F75 Received')),
                ('milk_f75_used', models.IntegerField(default=0, verbose_name='Milk_F75 Used')),
                ('milk_f75_lost', models.IntegerField(default=0, verbose_name='Milk_F75 Lost')),
                ('milk_f100_initial', models.IntegerField(default=0, verbose_name='Milk_F100 Initial')),
                ('milk_f100_received', models.IntegerField(default=0, verbose_name='Milk_F100 Received')),
                ('milk_f100_used', models.IntegerField(default=0, verbose_name='Milk_F100 Used')),
                ('milk_f100_lost', models.IntegerField(default=0, verbose_name='Milk_F100 Lost')),
                ('resomal_initial', models.IntegerField(default=0, verbose_name='Resomal Initial')),
                ('resomal_received', models.IntegerField(default=0, verbose_name='Resomal Received')),
                ('resomal_used', models.IntegerField(default=0, verbose_name='Resomal Used')),
                ('resomal_lost', models.IntegerField(default=0, verbose_name='Resomal Lost')),
                ('plumpy_sup_initial', models.IntegerField(default=0, verbose_name='Plumpy_Sup Initial')),
                ('plumpy_sup_received', models.IntegerField(default=0, verbose_name='Plumpy_Sup Received')),
                ('plumpy_sup_used', models.IntegerField(default=0, verbose_name='Plumpy_Sup Used')),
                ('plumpy_sup_lost', models.IntegerField(default=0, verbose_name='Plumpy_Sup Lost')),
                ('supercereal_initial', models.IntegerField(default=0, verbose_name='Supercereal Initial')),
                ('supercereal_received', models.IntegerField(default=0, verbose_name='Supercereal Received')),
                ('supercereal_used', models.IntegerField(default=0, verbose_name='Supercereal Used')),
                ('supercereal_lost', models.IntegerField(default=0, verbose_name='Supercereal Lost')),
                ('supercereal_plus_initial', models.IntegerField(default=0, verbose_name='Supercereal_Plus Initial')),
                ('supercereal_plus_received', models.IntegerField(default=0, verbose_name='Supercereal_Plus Received')),
                ('supercereal_plus_used', models.IntegerField(default=0, verbose_name='Supercereal_Plus Used')),
                ('supercereal_plus_lost', models.IntegerField(default=0, verbose_name='Supercereal_Plus Lost')),
                ('oil_initial', models.IntegerField(default=0, verbose_name='Oil Initial')),
                ('oil_received', models.IntegerField(default=0, verbose_name='Oil Received')),
                ('oil_used', models.IntegerField(default=0, verbose_name='Oil Used')),
                ('oil_lost', models.IntegerField(default=0, verbose_name='Oil Lost')),
                ('amoxycilline_125_vials_initial', models.IntegerField(default=0, verbose_name='Amoxycilline_125_Vials Initial')),
                ('amoxycilline_125_vials_received', models.IntegerField(default=0, verbose_name='Amoxycilline_125_Vials Received')),
                ('amoxycilline_125_vials_used', models.IntegerField(default=0, verbose_name='Amoxycilline_125_Vials Used')),
                ('amoxycilline_125_vials_lost', models.IntegerField(default=0, verbose_name='Amoxycilline_125_Vials Lost')),
                ('amoxycilline_250_caps_initial', models.IntegerField(default=0, verbose_name='Amoxycilline_250_Caps Initial')),
                ('amoxycilline_250_caps_received', models.IntegerField(default=0, verbose_name='Amoxycilline_250_Caps Received')),
                ('amoxycilline_250_caps_used', models.IntegerField(default=0, verbose_name='Amoxycilline_250_Caps Used')),
                ('amoxycilline_250_caps_lost', models.IntegerField(default=0, verbose_name='Amoxycilline_250_Caps Lost')),
                ('albendazole_400_initial', models.IntegerField(default=0, verbose_name='Albendazole Initial')),
                ('albendazole_400_received', models.IntegerField(default=0, verbose_name='Albendazole Received')),
                ('albendazole_400_used', models.IntegerField(default=0, verbose_name='Albendazole Used')),
                ('albendazole_400_lost', models.IntegerField(default=0, verbose_name='Albendazole Lost')),
                ('vita_100_injectable_initial', models.IntegerField(default=0, verbose_name='Vita_100_Injectable Initial')),
                ('vita_100_injectable_received', models.IntegerField(default=0, verbose_name='Vita_100_Injectable Received')),
                ('vita_100_injectable_used', models.IntegerField(default=0, verbose_name='Vita_100_Injectable Used')),
                ('vita_100_injectable_lost', models.IntegerField(default=0, verbose_name='Vita_100_Injectable Lost')),
                ('vita_200_injectable_initial', models.IntegerField(default=0, verbose_name='Vita_200_Injectable Initial')),
                ('vita_200_injectable_received', models.IntegerField(default=0, verbose_name='Vita_200_Injectable Received')),
                ('vita_200_injectable_used', models.IntegerField(default=0, verbose_name='Vita_200_Injectable Used')),
                ('vita_200_injectable_lost', models.IntegerField(default=0, verbose_name='Vita_200_Injectable Lost')),
                ('iron_folic_acid_initial', models.IntegerField(default=0, verbose_name='Iron_Folic_Acid Initial')),
                ('iron_folic_acid_received', models.IntegerField(default=0, verbose_name='Iron_Folic_Acid Received')),
                ('iron_folic_acid_used', models.IntegerField(default=0, verbose_name='Iron_Folic_Acid Used')),
                ('iron_folic_acid_lost', models.IntegerField(default=0, verbose_name='Iron_Folic_Acid Lost')),
            ],
            options={
                'verbose_name': 'Nutrition Inputs Report',
                'verbose_name_plural': 'Nutrition Inputs Reports',
            },
            bases=('snisi_core.snisireport',),
        ),
        migrations.CreateModel(
            name='URENAMNutritionR',
            fields=[
                ('snisireport_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='snisi_core.SNISIReport')),
                ('u23o6_total_start_m', models.PositiveIntegerField(verbose_name='[6-23m] Start of Month Male')),
                ('u23o6_total_start_f', models.PositiveIntegerField(verbose_name='[6-23m] Start of Month Female')),
                ('u23o6_new_cases', models.PositiveIntegerField(verbose_name='[6-23m] New Cases')),
                ('u23o6_returned', models.PositiveIntegerField(verbose_name='[6-23m] Returned')),
                ('u23o6_total_in_m', models.PositiveIntegerField(verbose_name='[6-23m] Total Admitted Male')),
                ('u23o6_total_in_f', models.PositiveIntegerField(verbose_name='[6-23m] Total Admitted Female')),
                ('u23o6_healed', models.PositiveIntegerField(verbose_name='[6-23m] Healed')),
                ('u23o6_deceased', models.PositiveIntegerField(verbose_name='[6-23m] Deceased')),
                ('u23o6_abandon', models.PositiveIntegerField(verbose_name='[6-23m] Abandon')),
                ('u23o6_total_out_m', models.PositiveIntegerField(verbose_name='[6-23m] Total Out Male')),
                ('u23o6_total_out_f', models.PositiveIntegerField(verbose_name='[6-23m] Total Out Female')),
                ('u23o6_referred', models.PositiveIntegerField(verbose_name='[6-23m] Referred')),
                ('u23o6_total_end_m', models.PositiveIntegerField(verbose_name='[6-23m] End of Month Male')),
                ('u23o6_total_end_f', models.PositiveIntegerField(verbose_name='[6-23m] End of Month Female')),
                ('u59o23_total_start_m', models.PositiveIntegerField(verbose_name='[23-59m] Start of Month Male')),
                ('u59o23_total_start_f', models.PositiveIntegerField(verbose_name='[23-59m] Start of Month Female')),
                ('u59o23_new_cases', models.PositiveIntegerField(verbose_name='[23-59m] New Cases')),
                ('u59o23_returned', models.PositiveIntegerField(verbose_name='[23-59m] Returned')),
                ('u59o23_total_in_m', models.PositiveIntegerField(verbose_name='[23-59m] Total Admitted Male')),
                ('u59o23_total_in_f', models.PositiveIntegerField(verbose_name='[23-59m] Total Admitted Female')),
                ('u59o23_healed', models.PositiveIntegerField(verbose_name='[23-59m] Healed')),
                ('u59o23_deceased', models.PositiveIntegerField(verbose_name='[23-59m] Deceased')),
                ('u59o23_abandon', models.PositiveIntegerField(verbose_name='[23-59m] Abandon')),
                ('u59o23_total_out_m', models.PositiveIntegerField(verbose_name='[23-59m] Total Out Male')),
                ('u59o23_total_out_f', models.PositiveIntegerField(verbose_name='[23-59m] Total Out Female')),
                ('u59o23_referred', models.PositiveIntegerField(verbose_name='[23-59m] Referred')),
                ('u59o23_total_end_m', models.PositiveIntegerField(verbose_name='[23-59m] End of Month Male')),
                ('u59o23_total_end_f', models.PositiveIntegerField(verbose_name='[23-59m] End of Month Female')),
                ('o59_total_start_m', models.PositiveIntegerField(verbose_name='[59m+] Start of Month Male')),
                ('o59_total_start_f', models.PositiveIntegerField(verbose_name='[59m+] Start of Month Female')),
                ('o59_new_cases', models.PositiveIntegerField(verbose_name='[59m+] New Cases')),
                ('o59_returned', models.PositiveIntegerField(verbose_name='[59m+] Returned')),
                ('o59_total_in_m', models.PositiveIntegerField(verbose_name='[59m+] Total Admitted Male')),
                ('o59_total_in_f', models.PositiveIntegerField(verbose_name='[59m+] Total Admitted Female')),
                ('o59_healed', models.PositiveIntegerField(verbose_name='[59m+] Healed')),
                ('o59_deceased', models.PositiveIntegerField(verbose_name='[59m+] Deceased')),
                ('o59_abandon', models.PositiveIntegerField(verbose_name='[59m+] Abandon')),
                ('o59_total_out_m', models.PositiveIntegerField(verbose_name='[59m+] Total Out Male')),
                ('o59_total_out_f', models.PositiveIntegerField(verbose_name='[59m+] Total Out Female')),
                ('o59_referred', models.PositiveIntegerField(verbose_name='[59m+] Referred')),
                ('o59_total_end_m', models.PositiveIntegerField(verbose_name='[59m+] End of Month Male')),
                ('o59_total_end_f', models.PositiveIntegerField(verbose_name='[59m+] End of Month Female')),
                ('pw_total_start_m', models.PositiveIntegerField(verbose_name='[PW/BF] Start of Month Male')),
                ('pw_total_start_f', models.PositiveIntegerField(verbose_name='[PW/BF] Start of Month Female')),
                ('pw_new_cases', models.PositiveIntegerField(verbose_name='[PW/BF] New Cases')),
                ('pw_returned', models.PositiveIntegerField(verbose_name='[PW/BF] Returned')),
                ('pw_total_in_m', models.PositiveIntegerField(verbose_name='[PW/BF] Total Admitted Male')),
                ('pw_total_in_f', models.PositiveIntegerField(verbose_name='[PW/BF] Total Admitted Female')),
                ('pw_healed', models.PositiveIntegerField(verbose_name='[PW/BF] Healed')),
                ('pw_deceased', models.PositiveIntegerField(verbose_name='[PW/BF] Deceased')),
                ('pw_abandon', models.PositiveIntegerField(verbose_name='[PW/BF] Abandon')),
                ('pw_total_out_m', models.PositiveIntegerField(verbose_name='[PW/BF] Total Out Male')),
                ('pw_total_out_f', models.PositiveIntegerField(verbose_name='[PW/BF] Total Out Female')),
                ('pw_referred', models.PositiveIntegerField(verbose_name='[PW/BF] Referred')),
                ('pw_total_end_m', models.PositiveIntegerField(verbose_name='[PW/BF] End of Month Male')),
                ('pw_total_end_f', models.PositiveIntegerField(verbose_name='[PW/BF] End of Month Female')),
                ('exsam_total_start_m', models.PositiveIntegerField(verbose_name='[Ex-SAM] Start of Month Male')),
                ('exsam_total_start_f', models.PositiveIntegerField(verbose_name='[Ex-SAM] Start of Month Female')),
                ('exsam_total_out_m', models.PositiveIntegerField(verbose_name='[Ex-SAM] Total Out Male')),
                ('exsam_total_out_f', models.PositiveIntegerField(verbose_name='[Ex-SAM] Total Out Female')),
                ('exsam_referred', models.PositiveIntegerField(verbose_name='[Ex-SAM] Referred')),
                ('exsam_total_end_m', models.PositiveIntegerField(verbose_name='[Ex-SAM] End of Month Male')),
                ('exsam_total_end_f', models.PositiveIntegerField(verbose_name='[Ex-SAM] End of Month Female')),
            ],
            options={
                'verbose_name': 'URENAM Report',
                'verbose_name_plural': 'URENAM Reports',
            },
            bases=('snisi_core.snisireport',),
        ),
        migrations.CreateModel(
            name='URENASNutritionR',
            fields=[
                ('snisireport_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='snisi_core.SNISIReport')),
                ('u59o6_total_start_m', models.PositiveIntegerField(verbose_name='[6-59m] Start of Month Male')),
                ('u59o6_total_start_f', models.PositiveIntegerField(verbose_name='[6-59m] Start of Month Female')),
                ('u59o6_new_cases', models.PositiveIntegerField(verbose_name='[6-59m] New Cases')),
                ('u59o6_returned', models.PositiveIntegerField(verbose_name='[6-59m] Returned')),
                ('u59o6_total_in_m', models.PositiveIntegerField(verbose_name='[6-59m] Total Admitted Male')),
                ('u59o6_total_in_f', models.PositiveIntegerField(verbose_name='[6-59m] Total Admitted Female')),
                ('u59o6_transferred', models.PositiveIntegerField(verbose_name='[6-59m] Transferred from URENI')),
                ('u59o6_healed', models.PositiveIntegerField(verbose_name='[6-59m] Healed')),
                ('u59o6_deceased', models.PositiveIntegerField(verbose_name='[6-59m] Deceased')),
                ('u59o6_abandon', models.PositiveIntegerField(verbose_name='[6-59m] Abandon')),
                ('u59o6_total_out_m', models.PositiveIntegerField(verbose_name='[6-59m] Total Out Male')),
                ('u59o6_total_out_f', models.PositiveIntegerField(verbose_name='[6-59m] Total Out Female')),
                ('u59o6_referred', models.PositiveIntegerField(verbose_name='[6-59m] Referred')),
                ('u59o6_total_end_m', models.PositiveIntegerField(verbose_name='[6-59m] End of Month Male')),
                ('u59o6_total_end_f', models.PositiveIntegerField(verbose_name='[6-59m] End of Month Female')),
                ('o59_total_start_m', models.PositiveIntegerField(verbose_name='[59m+] Start of Month Male')),
                ('o59_total_start_f', models.PositiveIntegerField(verbose_name='[59m+] Start of Month Female')),
                ('o59_new_cases', models.PositiveIntegerField(verbose_name='[59m+] New Cases')),
                ('o59_returned', models.PositiveIntegerField(verbose_name='[59m+] Returned')),
                ('o59_total_in_m', models.PositiveIntegerField(verbose_name='[59m+] Total Admitted Male')),
                ('o59_total_in_f', models.PositiveIntegerField(verbose_name='[59m+] Total Admitted Female')),
                ('o59_transferred', models.PositiveIntegerField(verbose_name='[59m+] Transferred from URENI')),
                ('o59_healed', models.PositiveIntegerField(verbose_name='[59m+] Healed')),
                ('o59_deceased', models.PositiveIntegerField(verbose_name='[59m+] Deceased')),
                ('o59_abandon', models.PositiveIntegerField(verbose_name='[59m+] Abandon')),
                ('o59_total_out_m', models.PositiveIntegerField(verbose_name='[59m+] Total Out Male')),
                ('o59_total_out_f', models.PositiveIntegerField(verbose_name='[59m+] Total Out Female')),
                ('o59_referred', models.PositiveIntegerField(verbose_name='[59m+] Referred')),
                ('o59_total_end_m', models.PositiveIntegerField(verbose_name='[59m+] End of Month Male')),
                ('o59_total_end_f', models.PositiveIntegerField(verbose_name='[59m+] End of Month Female')),
            ],
            options={
                'verbose_name': 'URENAS Report',
                'verbose_name_plural': 'URENAS Reports',
            },
            bases=('snisi_core.snisireport',),
        ),
        migrations.CreateModel(
            name='URENINutritionR',
            fields=[
                ('snisireport_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='snisi_core.SNISIReport')),
                ('u6_total_start_m', models.PositiveIntegerField(verbose_name='[0-6m] Start of Month Male')),
                ('u6_total_start_f', models.PositiveIntegerField(verbose_name='[0-6m] Start of Month Female')),
                ('u6_new_cases', models.PositiveIntegerField(verbose_name='[0-6m] New Cases')),
                ('u6_returned', models.PositiveIntegerField(verbose_name='[0-6m] Returned')),
                ('u6_total_in_m', models.PositiveIntegerField(verbose_name='[0-6m] Total Admitted Male')),
                ('u6_total_in_f', models.PositiveIntegerField(verbose_name='[0-6m] Total Admitted Female')),
                ('u6_referred', models.PositiveIntegerField(verbose_name='[0-6m] Referred')),
                ('u6_healed', models.PositiveIntegerField(verbose_name='[0-6m] Healed')),
                ('u6_deceased', models.PositiveIntegerField(verbose_name='[0-6m] Deceased')),
                ('u6_abandon', models.PositiveIntegerField(verbose_name='[0-6m] Abandon')),
                ('u6_not_responding', models.PositiveIntegerField(verbose_name='[0-6m] Not Respondant')),
                ('u6_total_out_m', models.PositiveIntegerField(verbose_name='[0-6m] Total Out Male')),
                ('u6_total_out_f', models.PositiveIntegerField(verbose_name='[0-6m] Total Out Female')),
                ('u6_transferred', models.PositiveIntegerField(verbose_name='[0-6m] Transferred')),
                ('u6_total_end_m', models.PositiveIntegerField(verbose_name='[0-6m] End of Month Male')),
                ('u6_total_end_f', models.PositiveIntegerField(verbose_name='[0-6m] End of Month Female')),
                ('u59o6_total_start_m', models.PositiveIntegerField(verbose_name='[6-59m] Start of Month Male')),
                ('u59o6_total_start_f', models.PositiveIntegerField(verbose_name='[6-59m] Start of Month Female')),
                ('u59o6_new_cases', models.PositiveIntegerField(verbose_name='[6-59m] New Cases')),
                ('u59o6_returned', models.PositiveIntegerField(verbose_name='[6-59m] Returned')),
                ('u59o6_total_in_m', models.PositiveIntegerField(verbose_name='[6-59m] Total Admitted Male')),
                ('u59o6_total_in_f', models.PositiveIntegerField(verbose_name='[6-59m] Total Admitted Female')),
                ('u59o6_referred', models.PositiveIntegerField(verbose_name='[6-59m] Referred')),
                ('u59o6_healed', models.PositiveIntegerField(verbose_name='[6-59m] Healed')),
                ('u59o6_deceased', models.PositiveIntegerField(verbose_name='[6-59m] Deceased')),
                ('u59o6_abandon', models.PositiveIntegerField(verbose_name='[6-59m] Abandon')),
                ('u59o6_not_responding', models.PositiveIntegerField(verbose_name='[6-59m] Not Respondant')),
                ('u59o6_total_out_m', models.PositiveIntegerField(verbose_name='[6-59m] Total Out Male')),
                ('u59o6_total_out_f', models.PositiveIntegerField(verbose_name='[6-59m] Total Out Female')),
                ('u59o6_transferred', models.PositiveIntegerField(verbose_name='[6-59m] Transferred')),
                ('u59o6_total_end_m', models.PositiveIntegerField(verbose_name='[6-59m] End of Month Male')),
                ('u59o6_total_end_f', models.PositiveIntegerField(verbose_name='[6-59m] End of Month Female')),
                ('o59_total_start_m', models.PositiveIntegerField(verbose_name='[59m+] Start of Month Male')),
                ('o59_total_start_f', models.PositiveIntegerField(verbose_name='[59m+] Start of Month Female')),
                ('o59_new_cases', models.PositiveIntegerField(verbose_name='[59m+] New Cases')),
                ('o59_returned', models.PositiveIntegerField(verbose_name='[59m+] Returned')),
                ('o59_total_in_m', models.PositiveIntegerField(verbose_name='[59m+] Total Admitted Male')),
                ('o59_total_in_f', models.PositiveIntegerField(verbose_name='[59m+] Total Admitted Female')),
                ('o59_referred', models.PositiveIntegerField(verbose_name='[59m+] Referred')),
                ('o59_healed', models.PositiveIntegerField(verbose_name='[59m+] Healed')),
                ('o59_deceased', models.PositiveIntegerField(verbose_name='[59m+] Deceased')),
                ('o59_abandon', models.PositiveIntegerField(verbose_name='[59m+] Abandon')),
                ('o59_not_responding', models.PositiveIntegerField(verbose_name='[59m+] Not Respondant')),
                ('o59_total_out_m', models.PositiveIntegerField(verbose_name='[59m+] Total Out Male')),
                ('o59_total_out_f', models.PositiveIntegerField(verbose_name='[59m+] Total Out Female')),
                ('o59_transferred', models.PositiveIntegerField(verbose_name='[59m+] Transferred')),
                ('o59_total_end_m', models.PositiveIntegerField(verbose_name='[59m+] End of Month Male')),
                ('o59_total_end_f', models.PositiveIntegerField(verbose_name='[59m+] End of Month Female')),
            ],
            options={
                'verbose_name': 'URENI Report',
                'verbose_name_plural': 'URENI Reports',
            },
            bases=('snisi_core.snisireport',),
        ),
        migrations.CreateModel(
            name='WeeklyNutritionR',
            fields=[
                ('snisireport_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='snisi_core.SNISIReport')),
                ('mam_screening', models.IntegerField(verbose_name='MAM Screening')),
                ('sam_screening', models.IntegerField(verbose_name='SAM Screening')),
                ('samc_screening', models.IntegerField(verbose_name='SAM+ Screening')),
                ('mam_cases', models.IntegerField(verbose_name='MAM Screening')),
                ('mam_deaths', models.IntegerField(verbose_name='MAM Screening')),
                ('sam_cases', models.IntegerField(verbose_name='SAM Screening')),
                ('sam_deaths', models.IntegerField(verbose_name='SAM Screening')),
                ('samc_cases', models.IntegerField(verbose_name='SAM+ Screening')),
                ('samc_deaths', models.IntegerField(verbose_name='SAM+ Screening')),
            ],
            options={
                'verbose_name': 'Weekly Nutrition Report',
                'verbose_name_plural': 'Weekly Nutrition Reports',
            },
            bases=('snisi_core.snisireport',),
        ),
        migrations.AddField(
            model_name='nutritionr',
            name='urenam_report',
            field=models.ForeignKey(related_name='nutritionr', blank=True, to='snisi_nutrition.URENAMNutritionR', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='nutritionr',
            name='urenas_report',
            field=models.ForeignKey(related_name='nutritionr', blank=True, to='snisi_nutrition.URENASNutritionR', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='nutritionr',
            name='ureni_report',
            field=models.ForeignKey(related_name='nutritionr', blank=True, to='snisi_nutrition.URENINutritionR', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='aggweeklynutritionr',
            name='indiv_sources',
            field=models.ManyToManyField(related_name='source_agg_aggweeklynutritionr_reports', null=True, verbose_name='Primary. Sources', to='snisi_nutrition.WeeklyNutritionR', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='aggureninutritionr',
            name='indiv_sources',
            field=models.ManyToManyField(related_name='source_agg_aggureninutritionr_reports', null=True, verbose_name='Primary. Sources', to='snisi_nutrition.URENINutritionR', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='aggurenasnutritionr',
            name='indiv_sources',
            field=models.ManyToManyField(related_name='source_agg_aggurenasnutritionr_reports', null=True, verbose_name='Primary. Sources', to='snisi_nutrition.URENASNutritionR', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='aggurenamnutritionr',
            name='indiv_sources',
            field=models.ManyToManyField(related_name='source_agg_aggurenamnutritionr_reports', null=True, verbose_name='Primary. Sources', to='snisi_nutrition.URENAMNutritionR', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='aggnutritionstocksr',
            name='indiv_sources',
            field=models.ManyToManyField(related_name='source_agg_aggnutritionstocksr_reports', null=True, verbose_name='Primary. Sources', to='snisi_nutrition.NutritionStocksR', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='aggnutritionr',
            name='indiv_sources',
            field=models.ManyToManyField(related_name='source_agg_aggnutritionr_reports', null=True, verbose_name='Primary. Sources', to='snisi_nutrition.NutritionR', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='aggnutritionr',
            name='urenam_report',
            field=models.ForeignKey(related_name='agg_nutritionr', blank=True, to='snisi_nutrition.AggURENAMNutritionR', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='aggnutritionr',
            name='urenas_report',
            field=models.ForeignKey(related_name='agg_nutritionr', blank=True, to='snisi_nutrition.AggURENASNutritionR', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='aggnutritionr',
            name='ureni_report',
            field=models.ForeignKey(related_name='agg_nutritionr', blank=True, to='snisi_nutrition.AggURENINutritionR', null=True),
            preserve_default=True,
        ),
        migrations.CreateModel(
            name='NutWeekDistrictValidationPeriod',
            fields=[
            ],
            options={
                'verbose_name': 'Week District Validation Period',
                'proxy': True,
                'verbose_name_plural': 'Week District Validation Periods',
            },
            bases=('snisi_core.weekperiod',),
        ),
        migrations.CreateModel(
            name='NutWeekExtendedReportingPeriod',
            fields=[
            ],
            options={
                'verbose_name': 'Week Reporting Period',
                'proxy': True,
                'verbose_name_plural': 'Week Reporting Periods',
            },
            bases=('snisi_core.weekperiod',),
        ),
        migrations.CreateModel(
            name='NutWeekPeriod',
            fields=[
            ],
            options={
                'verbose_name': 'Week Period',
                'proxy': True,
                'verbose_name_plural': 'Week Periods',
            },
            bases=('snisi_core.weekperiod',),
        ),
        migrations.CreateModel(
            name='NutWeekRegionValidationPeriod',
            fields=[
            ],
            options={
                'verbose_name': 'Week Region Validation Period',
                'proxy': True,
                'verbose_name_plural': 'Week Region Validation Periods',
            },
            bases=('snisi_core.weekperiod',),
        ),
        migrations.CreateModel(
            name='NutWeekReportingPeriod',
            fields=[
            ],
            options={
                'verbose_name': 'Week Reporting Period',
                'proxy': True,
                'verbose_name_plural': 'Week Reporting Periods',
            },
            bases=('snisi_core.weekperiod',),
        ),
    ]
