# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
        ('snisi_core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AggPFActivitiesR',
            fields=[
                ('snisireport_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='snisi_core.SNISIReport')),
                ('nb_source_reports_expected', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_on_time', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_correct', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_arrived_complete', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_altered', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_source_reports_auto_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_altered', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('nb_agg_reports_auto_validated', models.PositiveIntegerField(null=True, blank=True)),
                ('tubal_ligations', models.PositiveIntegerField(verbose_name='Tubal Ligations')),
                ('intrauterine_devices', models.PositiveIntegerField(verbose_name='IUD')),
                ('injections', models.PositiveIntegerField(verbose_name='Injections')),
                ('pills', models.PositiveIntegerField(verbose_name='Pills')),
                ('male_condoms', models.PositiveIntegerField(verbose_name='Male condoms')),
                ('female_condoms', models.PositiveIntegerField(verbose_name='Female condoms')),
                ('emergency_controls', models.PositiveIntegerField(verbose_name='Emergency controls')),
                ('implants', models.PositiveIntegerField(verbose_name='Implants')),
                ('new_clients', models.PositiveIntegerField(verbose_name='New Clients')),
                ('previous_clients', models.PositiveIntegerField(verbose_name='Previous Clients')),
                ('under25_visits', models.PositiveIntegerField(verbose_name='Visits from under 25yo.')),
                ('over25_visits', models.PositiveIntegerField(verbose_name='Visits from over 25yo.')),
                ('very_first_visits', models.PositiveIntegerField(verbose_name='Clients visiting for the first time.')),
                ('short_term_method_visits', models.PositiveIntegerField(verbose_name='Short-term methods related visits')),
                ('long_term_method_visits', models.PositiveIntegerField(verbose_name='Long-term methods related visits')),
                ('hiv_counseling_clients', models.PositiveIntegerField(verbose_name='HIV Counseiling')),
                ('hiv_tests', models.PositiveIntegerField(verbose_name='HIV Tests')),
                ('hiv_positive_results', models.PositiveIntegerField(verbose_name='HIV+ results')),
                ('implant_removal', models.PositiveIntegerField(verbose_name='Implant removals')),
                ('iud_removal', models.PositiveIntegerField(verbose_name='IUD removals')),
                ('intrauterine_devices_qty', models.PositiveIntegerField(verbose_name='IUD: Quantity')),
                ('intrauterine_devices_price', models.PositiveIntegerField(verbose_name='IUD: Price')),
                ('intrauterine_devices_revenue', models.PositiveIntegerField(verbose_name='IUD: Revenue')),
                ('implants_qty', models.PositiveIntegerField(verbose_name='Implants: Quantity')),
                ('implants_price', models.PositiveIntegerField(verbose_name='Implants: Price')),
                ('implants_revenue', models.PositiveIntegerField(verbose_name='Implants: Revenue')),
                ('injections_qty', models.PositiveIntegerField(verbose_name='Injections: Quantity')),
                ('injections_price', models.PositiveIntegerField(verbose_name='Injections: Price')),
                ('injections_revenue', models.PositiveIntegerField(verbose_name='Injections: Revenue')),
                ('pills_qty', models.PositiveIntegerField(verbose_name='Pills: Quantity')),
                ('pills_price', models.PositiveIntegerField(verbose_name='Pills: Price')),
                ('pills_revenue', models.PositiveIntegerField(verbose_name='Pills: Revenue')),
                ('male_condoms_qty', models.PositiveIntegerField(verbose_name='Male Condoms: Quantity')),
                ('male_condoms_price', models.PositiveIntegerField(verbose_name='Male Condoms: Price')),
                ('male_condoms_revenue', models.PositiveIntegerField(verbose_name='Male Condoms: Revenue')),
                ('female_condoms_qty', models.PositiveIntegerField(verbose_name='Female Condoms: Quantity')),
                ('female_condoms_price', models.PositiveIntegerField(verbose_name='Female Condoms: Price')),
                ('female_condoms_revenue', models.PositiveIntegerField(verbose_name='Female Condoms: Revenue')),
                ('hiv_tests_qty', models.PositiveIntegerField(verbose_name='HIV Tests: Quantity')),
                ('hiv_tests_price', models.PositiveIntegerField(verbose_name='HIV Tests: Price')),
                ('hiv_tests_revenue', models.PositiveIntegerField(verbose_name='HIV Tests: Revenue')),
                ('iud_removal_qty', models.PositiveIntegerField(verbose_name='IUD Removals: Quantity')),
                ('iud_removal_price', models.PositiveIntegerField(verbose_name='IUD Removals: Price')),
                ('iud_removal_revenue', models.PositiveIntegerField(verbose_name='IUD Removals: Revenue')),
                ('implant_removal_qty', models.PositiveIntegerField(verbose_name='Implants Removals: Quantity')),
                ('implant_removal_price', models.PositiveIntegerField(verbose_name='Implants Removals: Price')),
                ('implant_removal_revenue', models.PositiveIntegerField(verbose_name='Implants Removals')),
                ('intrauterine_devices_initial', models.PositiveIntegerField(verbose_name='IUD: Initial Quantity')),
                ('intrauterine_devices_used', models.PositiveIntegerField(verbose_name='IUD: Quantity Used')),
                ('intrauterine_devices_lost', models.PositiveIntegerField(verbose_name='IUD: Quantity Lost')),
                ('intrauterine_devices_received', models.PositiveIntegerField(verbose_name='IUD: Quantity Received')),
                ('implants_initial', models.PositiveIntegerField(verbose_name='Implants: Initial Quantity')),
                ('implants_used', models.PositiveIntegerField(verbose_name='Implants: Quantity Used')),
                ('implants_lost', models.PositiveIntegerField(verbose_name='Implants: Quantity Lost')),
                ('implants_received', models.PositiveIntegerField(verbose_name='Implants: Quantity Received')),
                ('injections_initial', models.PositiveIntegerField(verbose_name='Injections: Initial Quantity')),
                ('injections_used', models.PositiveIntegerField(verbose_name='Injections: Quantity Used')),
                ('injections_lost', models.PositiveIntegerField(verbose_name='Injections: Quantity Lost')),
                ('injections_received', models.PositiveIntegerField(verbose_name='Injections: Quantity Received')),
                ('pills_initial', models.PositiveIntegerField(verbose_name='Pills: Initial Quantity')),
                ('pills_used', models.PositiveIntegerField(verbose_name='Pills: Quantity Used')),
                ('pills_lost', models.PositiveIntegerField(verbose_name='Pills: Quantity Lost')),
                ('pills_received', models.PositiveIntegerField(verbose_name='Pills: Quantity Received')),
                ('male_condoms_initial', models.PositiveIntegerField(verbose_name='Male Condoms: Initial Quantity')),
                ('male_condoms_used', models.PositiveIntegerField(verbose_name='Male Condoms: Quantity Used')),
                ('male_condoms_lost', models.PositiveIntegerField(verbose_name='Male Condoms: Quantity Lost')),
                ('male_condoms_received', models.PositiveIntegerField(verbose_name='Male Condoms: Quantity Received')),
                ('female_condoms_initial', models.PositiveIntegerField(verbose_name='Female Condoms: Initial Quantity')),
                ('female_condoms_used', models.PositiveIntegerField(verbose_name='Female Condoms: Quantity Used')),
                ('female_condoms_lost', models.PositiveIntegerField(verbose_name='Female Condoms: Quantity Lost')),
                ('female_condoms_received', models.PositiveIntegerField(verbose_name='Female Condoms: Quantity Received')),
                ('hiv_tests_initial', models.PositiveIntegerField(verbose_name='HIV Tests: Initial Quantity')),
                ('hiv_tests_used', models.PositiveIntegerField(verbose_name='HIV Tests: Quantity Used')),
                ('hiv_tests_lost', models.PositiveIntegerField(verbose_name='HIV Tests: Quantity Lost')),
                ('hiv_tests_received', models.PositiveIntegerField(verbose_name='HIV Tests: Quantity Received')),
                ('pregnancy_tests_initial', models.PositiveIntegerField(verbose_name='Pregnancy Tests: Initial Quantity')),
                ('pregnancy_tests_used', models.PositiveIntegerField(verbose_name='Pregnancy Tests: Quantity Used')),
                ('pregnancy_tests_lost', models.PositiveIntegerField(verbose_name='Pregnancy Tests: Quantity Lost')),
                ('pregnancy_tests_received', models.PositiveIntegerField(verbose_name='Pregnancy Tests: Quantity Received')),
                ('agg_sources', models.ManyToManyField(related_name='aggregated_agg_aggpfactivitiesr_reports', null=True, verbose_name='Aggr. Sources (all)', to='snisi_reprohealth.AggPFActivitiesR', blank=True)),
                ('direct_agg_sources', models.ManyToManyField(related_name='direct_aggregated_agg_aggpfactivitiesr_reports', null=True, verbose_name='Aggr. Sources (direct)', to='snisi_reprohealth.AggPFActivitiesR', blank=True)),
            ],
            options={
                'verbose_name': 'Aggregated Provided Services Report',
                'verbose_name_plural': 'Aggregated Provided Services Reports',
            },
            bases=('snisi_core.snisireport', models.Model),
        ),
        migrations.CreateModel(
            name='PFActivitiesR',
            fields=[
                ('snisireport_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='snisi_core.SNISIReport')),
                ('tubal_ligations', models.PositiveIntegerField(verbose_name='Tubal Ligations')),
                ('intrauterine_devices', models.PositiveIntegerField(verbose_name='IUD')),
                ('injections', models.PositiveIntegerField(verbose_name='Injections')),
                ('pills', models.PositiveIntegerField(verbose_name='Pills')),
                ('male_condoms', models.PositiveIntegerField(verbose_name='Male condoms')),
                ('female_condoms', models.PositiveIntegerField(verbose_name='Female condoms')),
                ('emergency_controls', models.PositiveIntegerField(verbose_name='Emergency controls')),
                ('implants', models.PositiveIntegerField(verbose_name='Implants')),
                ('new_clients', models.PositiveIntegerField(verbose_name='New Clients')),
                ('previous_clients', models.PositiveIntegerField(verbose_name='Previous Clients')),
                ('under25_visits', models.PositiveIntegerField(verbose_name='Visits from under 25yo.')),
                ('over25_visits', models.PositiveIntegerField(verbose_name='Visits from over 25yo.')),
                ('very_first_visits', models.PositiveIntegerField(verbose_name='Clients visiting for the first time.')),
                ('short_term_method_visits', models.PositiveIntegerField(verbose_name='Short-term methods related visits')),
                ('long_term_method_visits', models.PositiveIntegerField(verbose_name='Long-term methods related visits')),
                ('hiv_counseling_clients', models.PositiveIntegerField(verbose_name='HIV Counseiling')),
                ('hiv_tests', models.PositiveIntegerField(verbose_name='HIV Tests')),
                ('hiv_positive_results', models.PositiveIntegerField(verbose_name='HIV+ results')),
                ('implant_removal', models.PositiveIntegerField(verbose_name='Implant removals')),
                ('iud_removal', models.PositiveIntegerField(verbose_name='IUD removals')),
                ('intrauterine_devices_qty', models.PositiveIntegerField(verbose_name='IUD: Quantity')),
                ('intrauterine_devices_price', models.PositiveIntegerField(verbose_name='IUD: Price')),
                ('intrauterine_devices_revenue', models.PositiveIntegerField(verbose_name='IUD: Revenue')),
                ('implants_qty', models.PositiveIntegerField(verbose_name='Implants: Quantity')),
                ('implants_price', models.PositiveIntegerField(verbose_name='Implants: Price')),
                ('implants_revenue', models.PositiveIntegerField(verbose_name='Implants: Revenue')),
                ('injections_qty', models.PositiveIntegerField(verbose_name='Injections: Quantity')),
                ('injections_price', models.PositiveIntegerField(verbose_name='Injections: Price')),
                ('injections_revenue', models.PositiveIntegerField(verbose_name='Injections: Revenue')),
                ('pills_qty', models.PositiveIntegerField(verbose_name='Pills: Quantity')),
                ('pills_price', models.PositiveIntegerField(verbose_name='Pills: Price')),
                ('pills_revenue', models.PositiveIntegerField(verbose_name='Pills: Revenue')),
                ('male_condoms_qty', models.PositiveIntegerField(verbose_name='Male Condoms: Quantity')),
                ('male_condoms_price', models.PositiveIntegerField(verbose_name='Male Condoms: Price')),
                ('male_condoms_revenue', models.PositiveIntegerField(verbose_name='Male Condoms: Revenue')),
                ('female_condoms_qty', models.PositiveIntegerField(verbose_name='Female Condoms: Quantity')),
                ('female_condoms_price', models.PositiveIntegerField(verbose_name='Female Condoms: Price')),
                ('female_condoms_revenue', models.PositiveIntegerField(verbose_name='Female Condoms: Revenue')),
                ('hiv_tests_qty', models.PositiveIntegerField(verbose_name='HIV Tests: Quantity')),
                ('hiv_tests_price', models.PositiveIntegerField(verbose_name='HIV Tests: Price')),
                ('hiv_tests_revenue', models.PositiveIntegerField(verbose_name='HIV Tests: Revenue')),
                ('iud_removal_qty', models.PositiveIntegerField(verbose_name='IUD Removals: Quantity')),
                ('iud_removal_price', models.PositiveIntegerField(verbose_name='IUD Removals: Price')),
                ('iud_removal_revenue', models.PositiveIntegerField(verbose_name='IUD Removals: Revenue')),
                ('implant_removal_qty', models.PositiveIntegerField(verbose_name='Implants Removals: Quantity')),
                ('implant_removal_price', models.PositiveIntegerField(verbose_name='Implants Removals: Price')),
                ('implant_removal_revenue', models.PositiveIntegerField(verbose_name='Implants Removals')),
                ('intrauterine_devices_initial', models.PositiveIntegerField(verbose_name='IUD: Initial Quantity')),
                ('intrauterine_devices_used', models.PositiveIntegerField(verbose_name='IUD: Quantity Used')),
                ('intrauterine_devices_lost', models.PositiveIntegerField(verbose_name='IUD: Quantity Lost')),
                ('intrauterine_devices_received', models.PositiveIntegerField(verbose_name='IUD: Quantity Received')),
                ('implants_initial', models.PositiveIntegerField(verbose_name='Implants: Initial Quantity')),
                ('implants_used', models.PositiveIntegerField(verbose_name='Implants: Quantity Used')),
                ('implants_lost', models.PositiveIntegerField(verbose_name='Implants: Quantity Lost')),
                ('implants_received', models.PositiveIntegerField(verbose_name='Implants: Quantity Received')),
                ('injections_initial', models.PositiveIntegerField(verbose_name='Injections: Initial Quantity')),
                ('injections_used', models.PositiveIntegerField(verbose_name='Injections: Quantity Used')),
                ('injections_lost', models.PositiveIntegerField(verbose_name='Injections: Quantity Lost')),
                ('injections_received', models.PositiveIntegerField(verbose_name='Injections: Quantity Received')),
                ('pills_initial', models.PositiveIntegerField(verbose_name='Pills: Initial Quantity')),
                ('pills_used', models.PositiveIntegerField(verbose_name='Pills: Quantity Used')),
                ('pills_lost', models.PositiveIntegerField(verbose_name='Pills: Quantity Lost')),
                ('pills_received', models.PositiveIntegerField(verbose_name='Pills: Quantity Received')),
                ('male_condoms_initial', models.PositiveIntegerField(verbose_name='Male Condoms: Initial Quantity')),
                ('male_condoms_used', models.PositiveIntegerField(verbose_name='Male Condoms: Quantity Used')),
                ('male_condoms_lost', models.PositiveIntegerField(verbose_name='Male Condoms: Quantity Lost')),
                ('male_condoms_received', models.PositiveIntegerField(verbose_name='Male Condoms: Quantity Received')),
                ('female_condoms_initial', models.PositiveIntegerField(verbose_name='Female Condoms: Initial Quantity')),
                ('female_condoms_used', models.PositiveIntegerField(verbose_name='Female Condoms: Quantity Used')),
                ('female_condoms_lost', models.PositiveIntegerField(verbose_name='Female Condoms: Quantity Lost')),
                ('female_condoms_received', models.PositiveIntegerField(verbose_name='Female Condoms: Quantity Received')),
                ('hiv_tests_initial', models.PositiveIntegerField(verbose_name='HIV Tests: Initial Quantity')),
                ('hiv_tests_used', models.PositiveIntegerField(verbose_name='HIV Tests: Quantity Used')),
                ('hiv_tests_lost', models.PositiveIntegerField(verbose_name='HIV Tests: Quantity Lost')),
                ('hiv_tests_received', models.PositiveIntegerField(verbose_name='HIV Tests: Quantity Received')),
                ('pregnancy_tests_initial', models.PositiveIntegerField(verbose_name='Pregnancy Tests: Initial Quantity')),
                ('pregnancy_tests_used', models.PositiveIntegerField(verbose_name='Pregnancy Tests: Quantity Used')),
                ('pregnancy_tests_lost', models.PositiveIntegerField(verbose_name='Pregnancy Tests: Quantity Lost')),
                ('pregnancy_tests_received', models.PositiveIntegerField(verbose_name='Pregnancy Tests: Quantity Received')),
                ('intrauterine_devices_observation', models.CharField(max_length=500, null=True, blank=True)),
                ('implants_observation', models.CharField(max_length=500, null=True, blank=True)),
                ('injections_observation', models.CharField(max_length=500, null=True, blank=True)),
                ('pills_observation', models.CharField(max_length=500, null=True, blank=True)),
                ('male_condoms_observation', models.CharField(max_length=500, null=True, blank=True)),
                ('female_condoms_observation', models.CharField(max_length=500, null=True, blank=True)),
                ('hiv_tests_observation', models.CharField(max_length=500, null=True, blank=True)),
                ('pregnancy_tests_observation', models.CharField(max_length=500, null=True, blank=True)),
            ],
            options={
                'verbose_name': 'Provided Services Report',
                'verbose_name_plural': 'Provided Services Reports',
            },
            bases=('snisi_core.snisireport', models.Model),
        ),
        migrations.AddField(
            model_name='aggpfactivitiesr',
            name='direct_indiv_sources',
            field=models.ManyToManyField(related_name='direct_source_agg_aggpfactivitiesr_reports', null=True, verbose_name='Primary. Sources (direct)', to='snisi_reprohealth.PFActivitiesR', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='aggpfactivitiesr',
            name='indiv_sources',
            field=models.ManyToManyField(related_name='source_agg_aggpfactivitiesr_reports', null=True, verbose_name='Primary. Sources (all)', to='snisi_reprohealth.PFActivitiesR', blank=True),
            preserve_default=True,
        ),
    ]
