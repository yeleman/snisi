#!/usr/bin/env python
# -*- coding: utf-8 -*-
# vim: ai ts=4 sts=4 et sw=4 nu

from __future__ import (unicode_literals, absolute_import,
                        division, print_function)
import logging

from py3compat import text_type
from django.utils.translation import ugettext_lazy as _

from snisi_reprohealth.models import PFActivitiesR
from snisi_core.xls_import import (ExcelForm, ExcelFormField)
from snisi_tools import type_converters

logger = logging.getLogger(__name__)


class PfactivitiesExcelForm(ExcelForm):

    MONTH_MAP = range(1, 13)
    YEAR_MAP = range(2014, 2021)

    _mapping = {'0.3': {
        'hc': ExcelFormField('C2', text_type, _("Health Center")),
        'month': ExcelFormField('C3', type_converters.NormalizedIntChoiceList,
                                _("Month"), cast_args=MONTH_MAP),
        'year': ExcelFormField('E3', type_converters.NormalizedIntChoiceList,
                               _("Year"), cast_args=YEAR_MAP),

        'tubal_ligations': ExcelFormField('C6', int,
                PFActivitiesR._meta.get_field('tubal_ligations').verbose_name),
        'intrauterine_devices': ExcelFormField('C7', int,
                PFActivitiesR._meta.get_field('intrauterine_devices').verbose_name),
        'injections': ExcelFormField('C8', int,
                PFActivitiesR._meta.get_field('injections').verbose_name),
        'pills': ExcelFormField('C9', int,
                PFActivitiesR._meta.get_field('pills').verbose_name),
        'male_condoms': ExcelFormField('C10', int,
                PFActivitiesR._meta.get_field('male_condoms').verbose_name),
        'female_condoms': ExcelFormField('C11', int,
                PFActivitiesR._meta.get_field('female_condoms').verbose_name),
        'emergency_controls': ExcelFormField('C12', int,
                PFActivitiesR._meta.get_field('emergency_controls').verbose_name),
        'implants': ExcelFormField('C13', int,
                PFActivitiesR._meta.get_field('implants').verbose_name),

        'new_clients': ExcelFormField('D16', int,
                PFActivitiesR._meta.get_field('new_clients').verbose_name),
        'previous_clients': ExcelFormField('D17', int,
                PFActivitiesR._meta.get_field('previous_clients').verbose_name),
        'under25_visits': ExcelFormField('D18', int,
                PFActivitiesR._meta.get_field('under25_visits').verbose_name),
        'over25_visits': ExcelFormField('D19', int,
                PFActivitiesR._meta.get_field('over25_visits').verbose_name),
        'very_first_visits': ExcelFormField('D20', int,
                PFActivitiesR._meta.get_field('very_first_visits').verbose_name),
        'short_term_method_visits': ExcelFormField('D21', int,
                PFActivitiesR._meta.get_field('short_term_method_visits').verbose_name),
        'long_term_method_visits': ExcelFormField('D22', int,
                PFActivitiesR._meta.get_field('long_term_method_visits').verbose_name),
        'hiv_counseling_clients': ExcelFormField('D23', int,
                PFActivitiesR._meta.get_field('hiv_counseling_clients').verbose_name),
        'hiv_tests': ExcelFormField('D24', int,
                PFActivitiesR._meta.get_field('hiv_tests').verbose_name),
        'hiv_positive_results': ExcelFormField('D25', int,
                PFActivitiesR._meta.get_field('hiv_positive_results').verbose_name),
        'implant_removal': ExcelFormField('D27', int,
                PFActivitiesR._meta.get_field('implant_removal').verbose_name),
        'iud_removal': ExcelFormField('D28', int,
                PFActivitiesR._meta.get_field('iud_removal').verbose_name),

        'intrauterine_devices_qty': ExcelFormField('B3', int,
                PFActivitiesR._meta.get_field('intrauterine_devices_qty').verbose_name),
        'intrauterine_devices_price': ExcelFormField('C3', int,
                PFActivitiesR._meta.get_field('intrauterine_devices_price').verbose_name),
        'intrauterine_devices_revenue': ExcelFormField('E3', int,
                PFActivitiesR._meta.get_field('intrauterine_devices_revenue').verbose_name),
        'implants_qty': ExcelFormField('B4', int,
                PFActivitiesR._meta.get_field('implants_qty').verbose_name),
        'implants_price': ExcelFormField('C4', int,
                PFActivitiesR._meta.get_field('implants_price').verbose_name),
        'implants_revenue': ExcelFormField('E4', int,
                PFActivitiesR._meta.get_field('implants_revenue').verbose_name),
        'injections_qty': ExcelFormField('B5', int,
                PFActivitiesR._meta.get_field('injections_qty').verbose_name),
        'injections_price': ExcelFormField('C5', int,
                PFActivitiesR._meta.get_field('injections_price').verbose_name),
        'injections_revenue': ExcelFormField('E5', int,
                PFActivitiesR._meta.get_field('injections_revenue').verbose_name),
        'pills_qty': ExcelFormField('B6', int,
                PFActivitiesR._meta.get_field('pills_qty').verbose_name),
        'pills_price': ExcelFormField('C6', int,
                PFActivitiesR._meta.get_field('pills_price').verbose_name),
        'pills_revenue': ExcelFormField('E6', int,
                PFActivitiesR._meta.get_field('pills_revenue').verbose_name),
        'male_condoms_qty': ExcelFormField('B7', int,
                PFActivitiesR._meta.get_field('male_condoms_qty').verbose_name),
        'male_condoms_price': ExcelFormField('C7', int,
                PFActivitiesR._meta.get_field('male_condoms_price').verbose_name),
        'male_condoms_revenue': ExcelFormField('E7', int,
                PFActivitiesR._meta.get_field('male_condoms_revenue').verbose_name),
        'female_condoms_qty': ExcelFormField('B8', int,
                PFActivitiesR._meta.get_field('female_condoms_qty').verbose_name),
        'female_condoms_price': ExcelFormField('C8', int,
                PFActivitiesR._meta.get_field('female_condoms_price').verbose_name),
        'female_condoms_revenue': ExcelFormField('E8', int,
                PFActivitiesR._meta.get_field('female_condoms_revenue').verbose_name),
        'hiv_tests_qty': ExcelFormField('B9', int,
                PFActivitiesR._meta.get_field('hiv_tests_qty').verbose_name),
        'hiv_tests_price': ExcelFormField('C9', int,
                PFActivitiesR._meta.get_field('hiv_tests_price').verbose_name),
        'hiv_tests_revenue': ExcelFormField('E9', int,
                PFActivitiesR._meta.get_field('hiv_tests_revenue').verbose_name),
        'iud_removal_qty': ExcelFormField('B10', int,
                PFActivitiesR._meta.get_field('iud_removal_qty').verbose_name),
        'iud_removal_price': ExcelFormField('C10', int,
                PFActivitiesR._meta.get_field('iud_removal_price').verbose_name),
        'iud_removal_revenue': ExcelFormField('E10', int,
                PFActivitiesR._meta.get_field('iud_removal_revenue').verbose_name),
        'implant_removal_qty': ExcelFormField('B11', int,
                PFActivitiesR._meta.get_field('implant_removal_qty').verbose_name),
        'implant_removal_price': ExcelFormField('C11', int,
                PFActivitiesR._meta.get_field('implant_removal_price').verbose_name),
        'implant_removal_revenue': ExcelFormField('E11', int,
                PFActivitiesR._meta.get_field('implant_removal_revenue').verbose_name),

        'intrauterine_devices_initial': ExcelFormField('B3', int,
                PFActivitiesR._meta.get_field('intrauterine_devices_initial').verbose_name),
        'intrauterine_devices_used': ExcelFormField('D3', int,
                PFActivitiesR._meta.get_field('intrauterine_devices_used').verbose_name),
        'intrauterine_devices_lost': ExcelFormField('E3', int,
                PFActivitiesR._meta.get_field('intrauterine_devices_lost').verbose_name),
        'intrauterine_devices_received': ExcelFormField('C3', int,
                PFActivitiesR._meta.get_field('intrauterine_devices_received').verbose_name),
        'implants_initial': ExcelFormField('B4', int,
                PFActivitiesR._meta.get_field('implants_initial').verbose_name),
        'implants_used': ExcelFormField('D4', int,
                PFActivitiesR._meta.get_field('implants_used').verbose_name),
        'implants_lost': ExcelFormField('E4', int,
                PFActivitiesR._meta.get_field('implants_lost').verbose_name),
        'implants_received': ExcelFormField('C4', int,
                PFActivitiesR._meta.get_field('implants_received').verbose_name),
        'injections_initial': ExcelFormField('B5', int,
                PFActivitiesR._meta.get_field('injections_initial').verbose_name),
        'injections_used': ExcelFormField('D5', int,
                PFActivitiesR._meta.get_field('injections_used').verbose_name),
        'injections_lost': ExcelFormField('E5', int,
                PFActivitiesR._meta.get_field('injections_lost').verbose_name),
        'injections_received': ExcelFormField('C5', int,
                PFActivitiesR._meta.get_field('injections_received').verbose_name),
        'pills_initial': ExcelFormField('B6', int,
                PFActivitiesR._meta.get_field('pills_initial').verbose_name),
        'pills_used': ExcelFormField('D6', int,
                PFActivitiesR._meta.get_field('pills_used').verbose_name),
        'pills_lost': ExcelFormField('E6', int,
                PFActivitiesR._meta.get_field('pills_lost').verbose_name),
        'pills_received': ExcelFormField('C6', int,
                PFActivitiesR._meta.get_field('pills_received').verbose_name),
        'male_condoms_initial': ExcelFormField('B7', int,
                PFActivitiesR._meta.get_field('male_condoms_initial').verbose_name),
        'male_condoms_used': ExcelFormField('D7', int,
                PFActivitiesR._meta.get_field('male_condoms_used').verbose_name),
        'male_condoms_lost': ExcelFormField('E7', int,
                PFActivitiesR._meta.get_field('male_condoms_lost').verbose_name),
        'male_condoms_received': ExcelFormField('C7', int,
                PFActivitiesR._meta.get_field('male_condoms_received').verbose_name),
        'female_condoms_initial': ExcelFormField('B8', int,
                PFActivitiesR._meta.get_field('female_condoms_initial').verbose_name),
        'female_condoms_used': ExcelFormField('D8', int,
                PFActivitiesR._meta.get_field('female_condoms_used').verbose_name),
        'female_condoms_lost': ExcelFormField('E8', int,
                PFActivitiesR._meta.get_field('female_condoms_lost').verbose_name),
        'female_condoms_received': ExcelFormField('C8', int,
                PFActivitiesR._meta.get_field('female_condoms_received').verbose_name),
        'hiv_tests_initial': ExcelFormField('B9', int,
                PFActivitiesR._meta.get_field('hiv_tests_initial').verbose_name),
        'hiv_tests_used': ExcelFormField('D9', int,
                PFActivitiesR._meta.get_field('hiv_tests_used').verbose_name),
        'hiv_tests_lost': ExcelFormField('E9', int,
                PFActivitiesR._meta.get_field('hiv_tests_lost').verbose_name),
        'hiv_tests_received': ExcelFormField('C9', int,
                PFActivitiesR._meta.get_field('hiv_tests_received').verbose_name),
        'pregnancy_tests_initial': ExcelFormField('B10', int,
                PFActivitiesR._meta.get_field('pregnancy_tests_initial').verbose_name),
        'pregnancy_tests_used': ExcelFormField('D10', int,
                PFActivitiesR._meta.get_field('pregnancy_tests_used').verbose_name),
        'pregnancy_tests_lost': ExcelFormField('E10', int,
                PFActivitiesR._meta.get_field('pregnancy_tests_lost').verbose_name),
        'pregnancy_tests_received': ExcelFormField('C10', int,
                PFActivitiesR._meta.get_field('pregnancy_tests_received').verbose_name),
        }
    }

    def create_report(self, provider):

        print("create_report")
        # expected_reporting = self.get('expected_reporting')
        # return create_epidemio_report(provider=provider,
        #                               expected_reporting=expected_reporting,
        #                               completed_on=timezone.now(),
        #                               integrity_checker=self,
        #                               data_source=self.filepath)
